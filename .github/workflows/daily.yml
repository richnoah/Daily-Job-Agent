name: daily-job-scout

on:
  schedule:
    # 13:30 UTC = 08:30 America/Chicago during CDT (UTC-5), 07:30 during CST (UTC-6)
    - cron: "30 13 * * *"
  workflow_dispatch: {}

permissions:
  contents: write
  actions: read

concurrency:
  group: daily-job-scout
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # persist-credentials defaults to true; keep it unless your main branch is protected

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Show repo tree
        run: |
          pwd
          git rev-parse --short HEAD
          git status
          git ls-files | sed -n '1,200p'

      - name: Show bot.py with line numbers
        run: |
          echo "=== bot.py (first 240 lines) ==="
          nl -ba bot.py | sed -n '1,240p'
          echo "=== grep for 'for it in items' ==="
          grep -n "for it in items" bot.py || true

      - name: Search any stray 'for it in items' in repo
        run: |
          grep -RIn "for it in items" || true

      - name: Run bot
        env:
          SERPAPI_KEY: ${{ secrets.SERPAPI_KEY }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_APP_PW: ${{ secrets.EMAIL_APP_PW }}
        run: python bot.py

      # Persist state across runs by committing jobs.db back to the repo
      - name: Configure git
        if: ${{ always() }}   # commit DB even if the bot step soft-failed while debugging
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Commit updated DB (if changed)
        if: ${{ always() }}
        run: |
          mkdir -p data
          # move the DB into a tracked folder (adjust if your bot writes elsewhere)
          if [ -f jobs.db ]; then mv jobs.db data/jobs.db; fi
          git add data/jobs.db || true
          if ! git diff --cached --quiet; then
            git commit -m "chore: update jobs.db [skip ci]"
            git push
          else
            echo "No DB changes to commit."
          fi

      # Optional: artifact if pushing is blocked by branch protection
      - name: Upload DB artifact (fallback)
        if: ${{ failure() || cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: jobs-db-fallback
          path: data/jobs.db
          if-no-files-found: ignore